name: Deploy Docker Compose to EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to EC2 via SSH with full cleanup and debug
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "STEP 1: Switching to app directory..."
            cd /home/ubuntu/mini-netumo-frontend
            echo "✔ STEP 1 complete"

            echo "STEP 2: Cleaning working directory..."
            git reset --hard
            git clean -fd
            echo "✔ STEP 2 complete"

            echo "STEP 3: Pulling latest code..."
            git pull origin develop
            echo "✔ STEP 3 complete"

            echo "STEP 4: Stopping all containers..."
            docker stop \$(docker ps -aq) || true
            echo "✔ STEP 4 complete"

            echo "STEP 5: Removing all containers..."
            docker rm \$(docker ps -aq) || true
            echo "✔ STEP 5 complete"

            echo "STEP 6: Removing all images..."
            docker rmi -f \$(docker images -aq) || true
            echo "✔ STEP 6 complete"

            echo "STEP 7: Removing all volumes..."
            docker volume rm \$(docker volume ls -q) || true
            echo "✔ STEP 7 complete"

            echo "STEP 8: System prune..."
            docker system prune -a --volumes -f || true
            echo "✔ STEP 8 complete"

            echo "STEP 9: Building containers..."
            docker compose --env-file docker-compose.env build --no-cache
            echo "✔ STEP 9 complete"

            echo "STEP 10: Starting services..."
            docker compose --env-file docker-compose.env up -d
            echo "✔ STEP 10 complete"

            echo "STEP 11: Checking containers..."
            docker ps -a

            echo "STEP 12: Showing logs (backend)..."
            docker logs backend || echo "No backend logs"

            echo "STEP 13: Showing logs (frontend1)..."
            docker logs frontend1 || echo "No frontend1 logs"

            echo "STEP 14: Showing logs (nginx)..."
            docker logs nginx || echo "No nginx logs"

            echo " Deployment complete."
          EOF
